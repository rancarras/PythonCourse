---README---
Line 59 about factorizing primes takes the longest time for this code, although it runs quite fast. 
------------

30397485.0
Wrote profile results to euler72.py.lprof
Timer unit: 1e-06 s

Total time: 0.0058755 s
File: euler72.py
Function: gen_primes at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def gen_primes(n):
    13         1          2.6      2.6      0.0      l = range(2,n)
    14         1          0.4      0.4      0.0      primes = []
    15       999        348.9      0.3      5.9      for j in range(0,len(l)):
    16       998        267.8      0.3      4.6          p = True
    17      2968        970.0      0.3     16.5          for d in primes:
    18      2967       1847.2      0.6     31.4              if(d > sqrt(l[j])):
    19       167         50.8      0.3      0.9                  break
    20      2800       1426.9      0.5     24.3              if(l[j] % d == 0):
    21       830        241.4      0.3      4.1                  p = False
    22       830        253.3      0.3      4.3                  break;
    23       998        360.5      0.4      6.1          if(p):
    24       168        105.1      0.6      1.8              primes.append(l[j])
    25                                           
    26         1          0.6      0.6      0.0      return primes

Total time: 0.170999 s
File: euler72.py
Function: factorize at line 28

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    28                                           @profile
    29                                           def factorize(n,primes):
    30      9999       3472.3      0.3      2.0      factors = []
    31      9999       2857.8      0.3      1.7      init_n = n
    32     96347      32115.8      0.3     18.8      for p in primes:
    33    118736      49920.2      0.4     29.2          while(n%p == 0):
    34     22389       7468.1      0.3      4.4              n = n/p
    35     22389      10172.1      0.5      5.9              factors.append(p)
    36     96347      50427.8      0.5     29.5          if(p > sqrt(n)):
    37      9999       3135.9      0.3      1.8              break
    38      9999       3718.1      0.4      2.2      if(n > 1):
    39      9596       4199.7      0.4      2.5          factors.append(n)
    40      9999       3511.7      0.4      2.1      return factors

Total time: 0.391885 s
File: euler72.py
Function: fast_phi at line 57

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    57                                           @profile
    58                                           def fast_phi(n,primes):
    59      9999     344658.1     34.5     87.9      factors = factorize(n,primes)
    60      9999       5409.4      0.5      1.4      phi = factors[0]-1
    61     31985      15742.9      0.5      4.0      for i in range(1,len(factors)):
    62     21986      11057.8      0.5      2.8          if(factors[i] == factors[i-1]):
    63      7685       5418.6      0.7      1.4              phi *= (factors[i]-1)*(factors[i])/(factors[i]-1)
    64                                                   else:
    65     14301       6641.3      0.5      1.7              phi *= (factors[i]-1)
    66      9999       2957.4      0.3      0.8      return phi

